<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="countToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>140, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAARwAAAMUAAADBAAAAQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAKwAAALc8KgH/Y0cC/1c9Av86KAH/AAAAsAAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFgAAAJkmGQD8h2IE/7aFCP+BXgT/eVYD/6N2B/97WAT/JhgA+gAAAJIAAAASAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACAAAAHgMBwDyd1YD/7GBB/+oegb/ZEcC/wEBAP95VgP/pngH/6Z4B/+fcwb/bE0D/w8I
        AO8AAAByAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAFkAAADhZUgC/6l8B/+ufwf/clID/zMjAf+NZwT/hF8E/3lWA/+meAf/pngH/6Z4
        B/+meAf/mG4G/1xBAv8AAADdAAAAUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AB/+AAB//wAA///AA///8A////w///////8=
</value>
  </data>
</root>